name: iOS CI

# ----------------------------------------
# トリガー条件
# ----------------------------------------
on:
  push:
    branches: ["*"]          # すべてのブランチでpushを検知
  pull_request:
    branches: ["*"]          # すべてのブランチでPRを検知

jobs:
  build-and-test:
    # ----------------------------------------
    # 実行条件：
    #   - デフォルトブランチへの push
    #   - または PR のとき
    # ----------------------------------------
    if: ${{ github.ref_name == github.event.repository.default_branch || github.event_name == 'pull_request' }}

    runs-on: macos-latest     # GitHub提供のmacOSランナーで実行

    steps:
      # ----------------------------------------
      # 1. リポジトリのコードをチェックアウト
      # ----------------------------------------
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      # ----------------------------------------
      # 2. DerivedData（中間生成物）をキャッシュしてビルド時間を短縮
      # ----------------------------------------
      - name: Cache DerivedData
        uses: actions/cache@v4.2.3
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-xcode-derived-${{ hashFiles('**/*.swift') }}
          restore-keys: |
            ${{ runner.os }}-xcode-derived-

      # ----------------------------------------
      # 3. Xcodeのバージョンを自動でセットアップ
      #    'latest-stable' を使えば常に最新安定版を使える
      #    利用可能なバージョン一覧: https://github.com/actions/runner-images
      # ----------------------------------------
      - name: Select Xcode version
        run: sudo xcode-select -s '/Applications/Xcode_16.4.app/Contents/Developer'

      # ----------------------------------------
      # 4. ビルドとテストを実行
      # ----------------------------------------
      # ビルド
      - name: Xcode Resolve Package Dependencies
        run: set -o pipefail &&
          xcodebuild
          -project Linktape.xcodeproj
          -scheme Linktape
          -configuration Debug
          -clonedSourcePackagesDirPath SourcePackages
          -skipPackagePluginValidation
          -skipMacroValidation
          -scmProvider xcode
          -resolvePackageDependencies

      # 単体テストの実行
      - name: Xcode test
        run: set -o pipefail &&
          xcodebuild
          -project Linktape.xcodeproj
          -configuration Debug
          -destination 'platform=iOS Simulator,OS=18.5,name=iPhone 16 Pro'
          -scheme Linktape
          -skipPackagePluginValidation
          -skipMacroValidation
          -scmProvider xcode
          -clonedSourcePackagesDirPath SourcePackages
          -resultBundlePath 'Build/test.xcresult'
          -enableCodeCoverage YES
          test | xcbeautify --renderer github-actions
